{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\mes formation\\\\Mytube\\\\mytube\\\\clone_mytube\\\\Mytube\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css'; // import Nav from './component/Nav'\n// import AdminVideo from './component/AdminVideo'\n// import AdminVideoSelected from './component/AdminVideoSelected'\n// import AdminUpload from './component/AdminUpload'\n// //firebase\n// import base from './base'\n// //react router\n// import{BrowserRouter as Router,Route} from 'react-router-dom'\n\nclass App extends React.Component {\n  //   state ={\n  //     mytube:{},\n  //     search:'',\n  //     videoSelected:'',\n  //     user:''\n  //   }\n  // componentDidMount(){\n  //   this.ref=base.syncState(`/`,{\n  //     context:this,\n  //     state: 'mytube'\n  //   })\n  // }\n  // componentWillUnmount(){\n  //   base.removeBinding(this.ref);\n  // }\n  // handleSearch=(value)=>{\n  //   this.setState({search:value})\n  // }\n  // disconnecte=()=>{\n  //   this.setState({user:''})\n  // }\n  // handleUser=(value)=>{\n  //   const id=this.state.user.uid\n  //   this.setState({user:value})\n  // }\n  // handleVue=(key) => {\n  //   const mytube= {...this.state.mytube}\n  //   mytube.video[key].vue++;\n  //   this.setState({mytube})\n  //   const videoSelected=key\n  //   this.setState({videoSelected})\n  // }\n  // handleLike = (key) => {\n  //   const mytube= {...this.state.mytube}\n  //   mytube.video[key].like++;\n  //   this.setState({mytube})\n  // }\n  // getPseudo=(uid)=>{\n  //   console.log('in pseudo '+uid)\n  //   const Testuser={...this.state.mytube.user}\n  //   let pseudo=''\n  //   Object.keys(Testuser || {})   //on vérifie que le compte n'a pas déja été créer\n  //       .map(key => {\n  //                     if((Testuser[key].uid===uid)){\n  //                       pseudo=Testuser[key].pseudo\n  //                     }\n  //                  }\n  //           );\n  //   return pseudo\n  // }\n  // addNewUser= async (uid)=>{\n  //   const Testuser={...this.state.mytube.user}\n  //   console.log('in add new user '+uid)\n  //   const mytube={...this.state.mytube}\n  //   let pseudoUid=this.getPseudo(uid)\n  //   console.log('new user pseudo trouver'+pseudoUid)\n  //   if(pseudoUid===''){\n  //       pseudoUid= prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\")\n  //       console.log('prompt======'+pseudoUid)\n  //   }\n  //   const newUser={\n  //     uid:uid,\n  //     pseudo:pseudoUid\n  //   }\n  //   mytube.user[`user-${Date.now()}`]=newUser\n  //   this.setState({mytube})\n  //   console.log(newUser)\n  //   return newUser;\n  // }\n  // getUser=(uid)=>{\n  //   console.log('in get user '+uid)\n  //   const Testuser={...this.state.mytube.user}\n  //   console.log('test  ')\n  //   console.log(Testuser)\n  //   let newUser={}\n  //   Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\n  //       .map(key => {\n  //                 if((Testuser[key].uid===uid)){\n  //                   newUser=Testuser[key];\n  //                 }\n  //            }\n  //       );\n  //   if(newUser.uid===undefined){    //si aucun compte n'a été ctrouver on en créer un\n  //     newUser=this.addNewUser(uid)\n  //   }\n  //   console.log(newUser)\n  //   const user={...this.state.user}   //mise à jour du sate user local \n  //   this.setState({user:newUser})\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          state: this.state,\n          getPseudo: this.getPseudo,\n          stateMytube: this.state.mytube.video,\n          handleSearch: this.handleSearch,\n          handleUser: this.handleUser,\n          getUser: this.getUser,\n          disconnecte: this.disconnecte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideo, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            handleVue: this.handleVue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/guess/:slug\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoSelected, {\n            stateMytube: this.state.mytube.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/upload\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/mes formation/Mytube/mytube/clone_mytube/Mytube/src/App.js"],"names":["React","App","Component","render","state","getPseudo","mytube","video","handleSearch","handleUser","getUser","disconnecte","handleVue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAE/B;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAA,6BACC,QAAC,MAAD;AAAA,gCAEG,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE,KAAKC,KAAjB;AAAyB,UAAA,SAAS,EAAE,KAAKC,SAAzC;AAAoD,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,KAAnF;AAA0F,UAAA,YAAY,EAAE,KAAKC,YAA7G;AAA2H,UAAA,UAAU,EAAE,KAAKC,UAA5I;AAAwJ,UAAA,OAAO,EAAE,KAAKC,OAAtK;AAA+K,UAAA,WAAW,EAAE,KAAKC;AAAjM;AAAA;AAAA;AAAA;AAAA,gBAFH,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,MAAM,EAAE,mBAAI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE,KAAKP,KAAxB;AAA+B,YAAA,WAAW,EAAE,KAAKA,KAAL,CAAWE,MAAX,CAAkBC,KAA9D;AAAqE,YAAA,SAAS,EAAE,KAAKK;AAArF;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,KAAK,MAAhC;AAAiC,UAAA,MAAM,EAAE,mBAAI,QAAC,kBAAD;AAAoB,YAAA,WAAW,EAAE,KAAKR,KAAL,CAAWE,MAAX,CAAkBC;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAPF,eASG,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,MAAM,EAAE,mBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,gBATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,qBADF;AAgBD;;AAhI8B;;AAmIjC,eAAeN,GAAf","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\n// import Nav from './component/Nav'\r\n// import AdminVideo from './component/AdminVideo'\r\n// import AdminVideoSelected from './component/AdminVideoSelected'\r\n// import AdminUpload from './component/AdminUpload'\r\n// //firebase\r\n// import base from './base'\r\n\r\n// //react router\r\n// import{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends React.Component{\r\n\r\n  //   state ={\r\n  //     mytube:{},\r\n  //     search:'',\r\n  //     videoSelected:'',\r\n  //     user:''\r\n  //   }\r\n\r\n\r\n\r\n  // componentDidMount(){\r\n  //   this.ref=base.syncState(`/`,{\r\n  //     context:this,\r\n  //     state: 'mytube'\r\n  //   })\r\n  // }\r\n\r\n  // componentWillUnmount(){\r\n  //   base.removeBinding(this.ref);\r\n  // }\r\n\r\n  // handleSearch=(value)=>{\r\n  //   this.setState({search:value})\r\n  // }\r\n\r\n  // disconnecte=()=>{\r\n  //   this.setState({user:''})\r\n  // }\r\n\r\n  // handleUser=(value)=>{\r\n  //   const id=this.state.user.uid\r\n  //   this.setState({user:value})\r\n  // }\r\n  \r\n  // handleVue=(key) => {\r\n  //   const mytube= {...this.state.mytube}\r\n  //   mytube.video[key].vue++;\r\n  //   this.setState({mytube})\r\n  \r\n  //   const videoSelected=key\r\n  //   this.setState({videoSelected})\r\n  // }\r\n\r\n  // handleLike = (key) => {\r\n  //   const mytube= {...this.state.mytube}\r\n  //   mytube.video[key].like++;\r\n  //   this.setState({mytube})\r\n  // }\r\n\r\n\r\n  // getPseudo=(uid)=>{\r\n  //   console.log('in pseudo '+uid)\r\n  //   const Testuser={...this.state.mytube.user}\r\n  //   let pseudo=''\r\n  //   Object.keys(Testuser || {})   //on vérifie que le compte n'a pas déja été créer\r\n  //       .map(key => {\r\n  //                     if((Testuser[key].uid===uid)){\r\n  //                       pseudo=Testuser[key].pseudo\r\n  //                     }\r\n  //                  }\r\n  //           );\r\n  //   return pseudo\r\n  // }\r\n\r\n  // addNewUser= async (uid)=>{\r\n  //   const Testuser={...this.state.mytube.user}\r\n  //   console.log('in add new user '+uid)\r\n  //   const mytube={...this.state.mytube}\r\n  //   let pseudoUid=this.getPseudo(uid)\r\n  //   console.log('new user pseudo trouver'+pseudoUid)\r\n    \r\n  //   if(pseudoUid===''){\r\n  //       pseudoUid= prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\")\r\n  //       console.log('prompt======'+pseudoUid)\r\n  //   }\r\n\r\n  //   const newUser={\r\n  //     uid:uid,\r\n  //     pseudo:pseudoUid\r\n  //   }\r\n  //   mytube.user[`user-${Date.now()}`]=newUser\r\n  //   this.setState({mytube})\r\n  //   console.log(newUser)\r\n  //   return newUser;\r\n  // }\r\n\r\n  // getUser=(uid)=>{\r\n  //   console.log('in get user '+uid)\r\n  //   const Testuser={...this.state.mytube.user}\r\n  //   console.log('test  ')\r\n  //   console.log(Testuser)\r\n  //   let newUser={}\r\n  //   Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n  //       .map(key => {\r\n  //                 if((Testuser[key].uid===uid)){\r\n  //                   newUser=Testuser[key];\r\n  //                 }\r\n  //            }\r\n  //       );\r\n  //   if(newUser.uid===undefined){    //si aucun compte n'a été ctrouver on en créer un\r\n  //     newUser=this.addNewUser(uid)\r\n  //   }\r\n\r\n  //   console.log(newUser)\r\n  //   const user={...this.state.user}   //mise à jour du sate user local \r\n  //   this.setState({user:newUser})\r\n  // }\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n      <>\r\n       <Router>\r\n         \r\n          <Nav state={this.state}  getPseudo={this.getPseudo} stateMytube={this.state.mytube.video} handleSearch={this.handleSearch} handleUser={this.handleUser} getUser={this.getUser} disconnecte={this.disconnecte}>\r\n          </Nav>\r\n        \r\n         <Route path='/' exact render={()=><AdminVideo state={this.state} stateMytube={this.state.mytube.video} handleVue={this.handleVue}/>}/>\r\n        \r\n         <Route path='/guess/:slug' exact render={()=><AdminVideoSelected stateMytube={this.state.mytube.video} />}/> \r\n\r\n          <Route path='/upload' exact render={()=><AdminUpload /> }/>\r\n\r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}