{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\mes formation\\\\Mytube\\\\mytube\\\\clone_mytube\\\\Mytube\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport stateVideo from './stateVideo';\nimport Nav from './component/Nav';\nimport AdminVideo from './component/AdminVideo';\nimport AdminVideoSelected from './component/AdminVideoSelected'; //firebase\n\nimport base from './base'; //react router\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    this.state = {\n      mytube: {},\n      search: '',\n      videoSelected: '',\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(`/`, {\n      context: this,\n      state: 'mytube'\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          getPseudo: this.getPseudo,\n          stateMytube: this.state.mytube.video,\n          handleSearch: this.handleSearch,\n          handleUser: this.handleUser,\n          getUser: this.getUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideo, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            handleVue: this.handleVue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/guess/:slug\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoSelected, {\n            stateMytube: this.state.mytube.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/mes formation/Mytube/mytube/clone_mytube/Mytube/src/App.js"],"names":["React","Component","stateVideo","Nav","AdminVideo","AdminVideoSelected","base","BrowserRouter","Router","Route","App","constructor","props","state","mytube","search","videoSelected","user","componentDidMount","ref","syncState","context","componentWillUnmount","removeBinding","render","getPseudo","video","handleSearch","handleUser","getUser","handleVue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,SAAOC,aAAa,IAAIC,MAAxB,EAA+BC,KAA/B,QAA2C,kBAA3C;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AACzBU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKC,KAAL,GAAY;AACVC,MAAAA,MAAM,EAAC,EADG;AAEVC,MAAAA,MAAM,EAAC,EAFG;AAGVC,MAAAA,aAAa,EAAC,EAHJ;AAIVC,MAAAA,IAAI,EAAC;AAJK,KAAZ;AAMH;;AAGCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,GAAL,GAASb,IAAI,CAACc,SAAL,CAAgB,GAAhB,EAAmB;AAC1BC,MAAAA,OAAO,EAAC,IADkB;AAE1BR,MAAAA,KAAK,EAAE;AAFmB,KAAnB,CAAT;AAID;;AAEDS,EAAAA,oBAAoB,GAAE;AACpBhB,IAAAA,IAAI,CAACiB,aAAL,CAAmB,KAAKJ,GAAxB;AACD;;AA2EDK,EAAAA,MAAM,GAAE;AAMN,wBACE;AAAA,6BACC,QAAC,MAAD;AAAA,gCAEG,QAAC,GAAD;AAAK,UAAA,SAAS,EAAE,KAAKC,SAArB;AAAgC,UAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,KAA/D;AAAsE,UAAA,YAAY,EAAE,KAAKC,YAAzF;AAAuG,UAAA,UAAU,EAAE,KAAKC,UAAxH;AAAoI,UAAA,OAAO,EAAE,KAAKC;AAAlJ;AAAA;AAAA;AAAA;AAAA,gBAFH,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,MAAM,EAAE,mBAAI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE,KAAKhB,KAAxB;AAA+B,YAAA,WAAW,EAAE,KAAKA,KAAL,CAAWC,MAAX,CAAkBY,KAA9D;AAAqE,YAAA,SAAS,EAAE,KAAKI;AAArF;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,KAAK,MAAhC;AAAiC,UAAA,MAAM,EAAE,mBAAI,QAAC,kBAAD;AAAoB,YAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWC,MAAX,CAAkBY;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,qBADF;AAcD;;AAnHwB;;AAsH3B,eAAehB,GAAf","sourcesContent":["import React,{Component} from 'react'\r\nimport './App.css';\r\nimport stateVideo from './stateVideo'\r\nimport Nav from './component/Nav'\r\nimport AdminVideo from './component/AdminVideo'\r\nimport AdminVideoSelected from './component/AdminVideoSelected'\r\n\r\n//firebase\r\nimport base from './base'\r\n\r\n//react router\r\nimport{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    this.state ={\r\n      mytube:{},\r\n      search:'',\r\n      videoSelected:'',\r\n      user:{}\r\n    }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n    this.ref=base.syncState(`/`,{\r\n      context:this,\r\n      state: 'mytube'\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  handleSearch=(value)=>{\r\n    this.setState({search:value})\r\n  }\r\n\r\n  handleUser=(value)=>{\r\n    const id=this.state.user.uid\r\n    this.setState({user:value})\r\n  }\r\n  \r\n  handleVue=(key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].vue++;\r\n    this.setState({mytube})\r\n  \r\n    const videoSelected=key\r\n    this.setState({videoSelected})\r\n  }\r\n\r\n  handleLike = (key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].like++;\r\n    this.setState({mytube})\r\n  }\r\n\r\n\r\n  getPseudo=(uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    let pseudo=''\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                      if((Testuser[key].uid===uid)){\r\n                        pseudo=Testuser[key].pseudo\r\n                      }\r\n                   }\r\n            )\r\n    ;\r\n    return pseudo\r\n  }\r\n\r\n  addNewUser=(pseudo,uid)=>{\r\n    const mytube={...this.state.mytube}\r\n    const newUser={\r\n      uid:uid,\r\n      pseudo:pseudo\r\n    }\r\n    mytube.user[`user-${Date.now()}`]=newUser\r\n    this.setState({mytube})\r\n\r\n    return newUser;\r\n  }\r\n\r\n  getUser=(pseudo,uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    let newUser={}\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                  if((Testuser[key].uid===uid)){\r\n                    newUser=Testuser[key];\r\n                  }\r\n             }\r\n        );\r\n    \r\n    if(newUser.uid==null){    //si aucun compte n'a été ctrouver on en créer un\r\n      newUser=this.addNewUser(pseudo,uid)\r\n    }\r\n\r\n    const user={...this.state.user}   //mise à jour du sate user local \r\n    this.setState({user:newUser})\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n       <Router>\r\n         \r\n          <Nav getPseudo={this.getPseudo} stateMytube={this.state.mytube.video} handleSearch={this.handleSearch} handleUser={this.handleUser} getUser={this.getUser}>\r\n          </Nav>\r\n        \r\n         <Route path='/' exact render={()=><AdminVideo state={this.state} stateMytube={this.state.mytube.video} handleVue={this.handleVue}/>}/>\r\n        \r\n         <Route path='/guess/:slug' exact render={()=><AdminVideoSelected stateMytube={this.state.mytube.video} />}/> \r\n     \r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}