{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\mes formation\\\\Mytube\\\\mytube\\\\clone_mytube\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport stateVideo from './stateVideo';\nimport Nav from './component/Nav';\nimport AdminVideo from './component/AdminVideo';\nimport AdminVideoSelected from './component/AdminVideoSelected'; //firebase\n\nimport base from './base'; //react router\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = value => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleUser = value => {\n      const id = this.state.user.uid;\n      this.setState({\n        user: value\n      });\n    };\n\n    this.handleVue = key => {\n      const video = { ...this.state.mytube.video\n      };\n      video[key].vue++;\n      this.setState({\n        video\n      });\n      const videoSelected = key;\n      this.setState({\n        videoSelected\n      });\n    };\n\n    this.handleLike = key => {\n      const video = { ...this.state.mytube.video\n      };\n      video[key].like++;\n      this.setState({\n        video\n      });\n    };\n\n    this.addNewUser = (pseudo, uid) => {\n      const user = { ...this.state.mytube.user\n      };\n      const newUser = {\n        uid: {\n          uid\n        },\n        pseudo: pseudo\n      };\n      user[`user-${Date.now()}`] = newUser;\n      this.setState({\n        user\n      });\n    };\n\n    this.state = {\n      mytube: {},\n      search: '',\n      videoSelected: '',\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(`/`, {\n      context: this,\n      state: 'mytube'\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    console.log(this.state.mytube.user);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewUser('test', 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/mes formation/Mytube/mytube/clone_mytube/src/App.js"],"names":["React","Component","stateVideo","Nav","AdminVideo","AdminVideoSelected","base","BrowserRouter","Router","Route","App","constructor","props","handleSearch","value","setState","search","handleUser","id","state","user","uid","handleVue","key","video","mytube","vue","videoSelected","handleLike","like","addNewUser","pseudo","newUser","Date","now","componentDidMount","ref","syncState","context","componentWillUnmount","removeBinding","render","console","log"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport './App.css';\r\nimport stateVideo from './stateVideo'\r\nimport Nav from './component/Nav'\r\nimport AdminVideo from './component/AdminVideo'\r\nimport AdminVideoSelected from './component/AdminVideoSelected'\r\n\r\n//firebase\r\nimport base from './base'\r\n\r\n//react router\r\nimport{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state ={\r\n      mytube:{},\r\n      search:'',\r\n      videoSelected:'',\r\n      user:''\r\n    }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n    this.ref=base.syncState(`/`,{\r\n      context:this,\r\n      state: 'mytube'\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n  \r\n  handleSearch=(value)=>{\r\n    this.setState({search:value})\r\n  }\r\n\r\n  handleUser=(value)=>{\r\n    const id=this.state.user.uid\r\n    this.setState({user:value})\r\n  }\r\n  \r\n  handleVue=(key) => {\r\n    const video= {...this.state.mytube.video}\r\n    video[key].vue++;\r\n    this.setState({video})\r\n\r\n    const videoSelected=key\r\n    this.setState({videoSelected})\r\n  }\r\n\r\n  handleLike = (key) => {\r\n    const video= {...this.state.mytube.video}\r\n    video[key].like++;\r\n    this.setState({video})\r\n  }\r\n\r\n  addNewUser=(pseudo,uid)=>{\r\n    const user={...this.state.mytube.user}\r\n    const newUser={\r\n      uid:{uid},\r\n      pseudo:pseudo\r\n    }\r\n    user[`user-${Date.now()}`]=newUser\r\n    this.setState({user})\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n    console.log(this.state.mytube.user)\r\n\r\n    \r\n    return (\r\n      <>\r\n       <Router>\r\n       <button onClick= {()=>addNewUser('test',5)}></button>\r\n        {/* <Nav state={this.state.mytube.video} handleSearch={this.handleSearch} handleUser={this.handleUser}>\r\n        </Nav>\r\n        \r\n         <Route path='/' exact render={()=><AdminVideo search={this.state.search} state={this.state.mytube.video} handleVue={this.handleVue}/>}/> */}\r\n{/*         \r\n         <Route path='/guess/:slug' exact render={()=><AdminVideoSelected state={this.state.video.video}/>}/>   */}\r\n     \r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}