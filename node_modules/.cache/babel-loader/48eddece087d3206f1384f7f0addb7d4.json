{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\mes formation\\\\Mytube\\\\mytube\\\\clone_Mytube\\\\src\\\\component\\\\Login.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport base, { firebaseApp } from '../base';\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uid: null\n    };\n\n    this.handleAuth = async authData => {\n      console.log(authData.user.uid);\n      this.setState({\n        uid: authData.user.uid\n      });\n    };\n\n    this.authenticate = () => {\n      const authProvider = new firebase.auth.GoogleAuthProvider();\n      firebaseApp.auth().signInWithPopup(authProvider).then(this.handleAuth);\n    };\n\n    this.logout = async () => {\n      console.log('déconexion');\n      await firebase.auth().signOut();\n      this.setState({\n        uid: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.handleAuth({\n          user\n        });\n      }\n    });\n  }\n\n  render() {\n    if (uid === null) {}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.authenticate,\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/mes formation/Mytube/mytube/clone_Mytube/src/component/Login.js"],"names":["React","Component","firebase","base","firebaseApp","Login","state","uid","handleAuth","authData","console","log","user","setState","authenticate","authProvider","auth","GoogleAuthProvider","signInWithPopup","then","logout","signOut","componentDidMount","onAuthStateChanged","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,IAAcC,WAAd,QAAgC,SAAhC;AAGA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCK,KAFyC,GAEnC;AACFC,MAAAA,GAAG,EAAC;AADF,KAFmC;;AAAA,SAczCC,UAdyC,GAc5B,MAAMC,QAAN,IAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcL,GAA1B;AACA,WAAKM,QAAL,CAAc;AACVN,QAAAA,GAAG,EAAEE,QAAQ,CAACG,IAAT,CAAcL;AADT,OAAd;AAGH,KAnBwC;;AAAA,SAsBzCO,YAtByC,GAsB5B,MAAI;AACb,YAAMC,YAAY,GAAC,IAAIb,QAAQ,CAACc,IAAT,CAAcC,kBAAlB,EAAnB;AACAb,MAAAA,WAAW,CACNY,IADL,GAEKE,eAFL,CAEqBH,YAFrB,EAGKI,IAHL,CAGU,KAAKX,UAHf;AAIH,KA5BwC;;AAAA,SA8BzCY,MA9ByC,GA8BhC,YAAU;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAMT,QAAQ,CAACc,IAAT,GAAgBK,OAAhB,EAAN;AACA,WAAKR,QAAL,CAAc;AACVN,QAAAA,GAAG,EAAC;AADM,OAAd;AAGH,KApCwC;AAAA;;AAMzCe,EAAAA,iBAAiB,GAAE;AACfpB,IAAAA,QAAQ,CAACc,IAAT,GAAgBO,kBAAhB,CAAmCX,IAAI,IAAE;AACrC,UAAGA,IAAH,EAAQ;AACJ,aAAKJ,UAAL,CAAgB;AAACI,UAAAA;AAAD,SAAhB;AACH;AACJ,KAJD;AAKH;;AA0BDY,EAAAA,MAAM,GAAG;AACL,QAAGjB,GAAG,KAAG,IAAT,EAAc,CAEb;;AAED,wBACI;AAAA,6BACI;AAAG,QAAA,OAAO,EAAE,KAAKO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhDwC","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport base,{ firebaseApp} from '../base'\r\n\r\n\r\nexport default class Login extends Component {\r\n    \r\n    state={\r\n        uid:null\r\n    }\r\n    \r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(user=>{\r\n            if(user){\r\n                this.handleAuth({user})\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleAuth = async authData=>{\r\n        console.log(authData.user.uid)\r\n        this.setState({\r\n            uid: authData.user.uid\r\n        })\r\n    }\r\n\r\n\r\n    authenticate=()=>{\r\n        const authProvider=new firebase.auth.GoogleAuthProvider()\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.handleAuth)\r\n    }\r\n\r\n    logout = async ()=>{\r\n        console.log('déconexion')\r\n        await firebase.auth().signOut()\r\n        this.setState({\r\n            uid:null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(uid===null){\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <p onClick={this.authenticate}>Connexion</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}