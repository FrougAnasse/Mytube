{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\Mytube\\\\src\\\\component\\\\AdminUpload.js\";\nimport React, { useState } from 'react';\nimport { firabaseInitApp, firebaseInitApp } from '../base';\nexport default class AdminUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url2: ''\n    };\n\n    this.onChange = e => {\n      const file = e.target.files[0];\n      const storageRef = firebaseInitApp.storage().ref();\n      const fileRef = storageRef.child('video/' + file.name);\n      fileRef.put(file).then(() => {\n        console.log(\"Upload a file\");\n        fileRef.getDownloadURL().then(function (url) {\n          console.log(url);\n          this.setS;\n        });\n      });\n    };\n  }\n\n  // const affichage=()=>{\n  //     const storageRef=firebaseInitApp.storage().ref('video')\n  //     storageRef.listAll().then(function(result){\n  //         result.items.forEach(function(imageRef){\n  //             return displayImage(imageRef);\n  //         });\n  //     }).catch(function(error) {\n  //         console.log(error)\n  //   });\n  // }\n  //   function displayImage(imageRef){\n  //       imageRef.getDownloadUrl().then(function(url){\n  //            return <img src={url} />\n  //       }).catch(function(error){\n  //             console.log(error)\n  //       })\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: url2,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/Mytube/src/component/AdminUpload.js"],"names":["React","useState","firabaseInitApp","firebaseInitApp","AdminUpload","Component","state","url2","onChange","e","file","target","files","storageRef","storage","ref","fileRef","child","name","put","then","console","log","getDownloadURL","url","setS","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,SAA/C;AAGA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAErDC,KAFqD,GAE/C;AACFC,MAAAA,IAAI,EAAC;AADH,KAF+C;;AAAA,SAMrDC,QANqD,GAM3CC,CAAD,IAAK;AACV,YAAMC,IAAI,GAAED,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACA,YAAMC,UAAU,GAACV,eAAe,CAACW,OAAhB,GAA0BC,GAA1B,EAAjB;AACA,YAAOC,OAAO,GAACH,UAAU,CAACI,KAAX,CAAiB,WAASP,IAAI,CAACQ,IAA/B,CAAf;AACAF,MAAAA,OAAO,CAACG,GAAR,CAAYT,IAAZ,EAAkBU,IAAlB,CAAuB,MAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACCN,QAAAA,OAAO,CAACO,cAAR,GAAyBH,IAAzB,CAA8B,UAAUI,GAAV,EAAe;AACzCH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,eAAKC,IAAL;AACH,SAHD;AAIJ,OAND;AASH,KAnBoD;AAAA;;AAqBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAElB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,MAAf;AAAA,+BACQ;AAAQ,UAAA,GAAG,EAAED,IAAb;AACA,UAAA,IAAI,EAAC;AADL;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASF;;AAlDmD","sourcesContent":["import React,{useState} from 'react'\r\n\r\nimport {firabaseInitApp, firebaseInitApp} from '../base'\r\n\r\n\r\nexport default class AdminUpload extends React.Component {\r\n\r\n    state={\r\n        url2:''\r\n    }\r\n    \r\n    onChange=(e)=>{\r\n        const file= e.target.files[0]\r\n        const storageRef=firebaseInitApp.storage().ref()\r\n        const  fileRef=storageRef.child('video/'+file.name)\r\n        fileRef.put(file).then(()=>{\r\n            console.log(\"Upload a file\");\r\n             fileRef.getDownloadURL().then(function (url) {\r\n                 console.log(url)\r\n                 this.setS\r\n             });\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    // const affichage=()=>{\r\n    //     const storageRef=firebaseInitApp.storage().ref('video')\r\n    //     storageRef.listAll().then(function(result){\r\n    //         result.items.forEach(function(imageRef){\r\n    //             return displayImage(imageRef);\r\n    //         });\r\n    //     }).catch(function(error) {\r\n    //         console.log(error)\r\n    //   });\r\n    // }\r\n\r\n    //   function displayImage(imageRef){\r\n    //       imageRef.getDownloadUrl().then(function(url){\r\n    //            return <img src={url} />\r\n    //       }).catch(function(error){\r\n    //             console.log(error)\r\n    //       })\r\n\r\n \r\n    render(){\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={onChange}/>\r\n                <video controls>\r\n                        <source src={url2}\r\n                        type=\"video/mp4\"></source>\r\n                </video>\r\n            </div>\r\n        )\r\n     }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}