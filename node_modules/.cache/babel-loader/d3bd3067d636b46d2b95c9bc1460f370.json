{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\Mytube\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Nav from './component/Nav';\nimport AdminVideo from './component/AdminVideo';\nimport AdminVideoSelected from './component/AdminVideoSelected';\nimport AdminUpload from './component/AdminUpload'; //firebase\n\nimport base from './base'; //react router\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mytube: {},\n      search: '',\n      videoSelected: '',\n      user: ''\n    };\n\n    this.handleSearch = value => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.disconnecte = () => {\n      this.setState({\n        user: ''\n      });\n    };\n\n    this.handleUser = value => {\n      const id = this.state.user.uid;\n      this.setState({\n        user: value\n      });\n    };\n\n    this.handleVue = key => {\n      const mytube = { ...this.state.mytube\n      };\n      mytube.video[key].vue++;\n      this.setState({\n        mytube\n      });\n      const videoSelected = key;\n      this.setState({\n        videoSelected\n      });\n    };\n\n    this.handleLike = key => {\n      const mytube = { ...this.state.mytube\n      };\n      mytube.video[key].like++;\n      this.setState({\n        mytube\n      });\n    };\n\n    this.getPseudo = uid => {\n      console.log('in pseudo ' + uid);\n      const Testuser = { ...this.state.mytube.user\n      };\n      let pseudo = '';\n      Object.keys(Testuser || {}) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          pseudo = Testuser[key].pseudo;\n        }\n      });\n      return pseudo;\n    };\n\n    this.addNewUser = async uid => {\n      const Testuser = { ...this.state.mytube.user\n      };\n      console.log('in add new user ' + uid);\n      const mytube = { ...this.state.mytube\n      };\n      let pseudoUid = this.getPseudo(uid);\n      console.log('new user pseudo trouver' + pseudoUid);\n\n      if (pseudoUid === '') {\n        pseudoUid = prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\");\n        console.log('prompt======' + pseudoUid);\n      }\n\n      const newUser = {\n        uid: uid,\n        pseudo: pseudoUid\n      };\n      mytube.user[`user-${Date.now()}`] = newUser;\n      this.setState({\n        mytube\n      });\n      console.log(newUser);\n      return newUser;\n    };\n\n    this.getUser = uid => {\n      console.log('in get user ' + uid);\n      const Testuser = { ...this.state.mytube.user\n      };\n      console.log('test  ');\n      console.log(Testuser);\n      let newUser = {};\n      Object.keys(Testuser) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          newUser = Testuser[key];\n        }\n      });\n\n      if (newUser.uid === undefined) {\n        //si aucun compte n'a été ctrouver on en créer un\n        console.log('new new new new');\n        newUser = this.addNewUser(uid);\n      }\n\n      console.log(newUser);\n      const user = { ...this.state.user\n      }; //mise à jour du sate user local \n\n      this.setState({\n        user: newUser\n      });\n    };\n\n    this.addVideo = (nom, tags, url) => {\n      const video = { ...this.state.mytube.video\n      };\n      const NewVideo = {\n        auteur: this.state.user,\n        comment: '',\n        like: 0,\n        likeBy: \"\",\n        nom: nom,\n        tag: tags,\n        url: url,\n        vue: 0\n      };\n      video[`video${Date.now()}`] = NewVideo;\n      console.log(video);\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(`/`, {\n      context: this,\n      state: 'mytube'\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    this.addVideo('a', 'b', 'c');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          state: this.state,\n          getPseudo: this.getPseudo,\n          stateMytube: this.state.mytube.video,\n          handleSearch: this.handleSearch,\n          handleUser: this.handleUser,\n          getUser: this.getUser,\n          disconnecte: this.disconnecte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideo, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            handleVue: this.handleVue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/guess/:slug\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoSelected, {\n            stateMytube: this.state.mytube.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/upload\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminUpload, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            addVideo: this.addVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/Mytube/src/App.js"],"names":["React","Nav","AdminVideo","AdminVideoSelected","AdminUpload","base","BrowserRouter","Router","Route","App","Component","state","mytube","search","videoSelected","user","handleSearch","value","setState","disconnecte","handleUser","id","uid","handleVue","key","video","vue","handleLike","like","getPseudo","console","log","Testuser","pseudo","Object","keys","map","addNewUser","pseudoUid","prompt","newUser","Date","now","getUser","undefined","addVideo","nom","tags","url","NewVideo","auteur","comment","likeBy","tag","componentDidMount","ref","syncState","context","componentWillUnmount","removeBinding","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport Nav from './component/Nav'\r\nimport AdminVideo from './component/AdminVideo'\r\nimport AdminVideoSelected from './component/AdminVideoSelected'\r\nimport AdminUpload from './component/AdminUpload'\r\n//firebase\r\nimport base from './base'\r\n\r\n//react router\r\nimport{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends React.Component{\r\n\r\n    state ={\r\n      mytube:{},\r\n      search:'',\r\n      videoSelected:'',\r\n      user:''\r\n    }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    this.ref=base.syncState(`/`,{\r\n      context:this,\r\n      state: 'mytube'\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  handleSearch=(value)=>{\r\n    this.setState({search:value})\r\n  }\r\n\r\n  disconnecte=()=>{\r\n    this.setState({user:''})\r\n  }\r\n\r\n  handleUser=(value)=>{\r\n    const id=this.state.user.uid\r\n    this.setState({user:value})\r\n  }\r\n  \r\n  handleVue=(key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].vue++;\r\n    this.setState({mytube})\r\n  \r\n    const videoSelected=key\r\n    this.setState({videoSelected})\r\n  }\r\n\r\n  handleLike = (key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].like++;\r\n    this.setState({mytube})\r\n  }\r\n\r\n\r\n  getPseudo=(uid)=>{\r\n    console.log('in pseudo '+uid)\r\n    const Testuser={...this.state.mytube.user}\r\n    let pseudo=''\r\n    Object.keys(Testuser || {})   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                      if((Testuser[key].uid===uid)){\r\n                        pseudo=Testuser[key].pseudo\r\n                      }\r\n                   }\r\n            );\r\n    return pseudo\r\n  }\r\n\r\n  addNewUser= async (uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    console.log('in add new user '+uid)\r\n    const mytube={...this.state.mytube}\r\n    let pseudoUid=this.getPseudo(uid)\r\n    console.log('new user pseudo trouver'+pseudoUid)\r\n    \r\n    if(pseudoUid===''){\r\n        pseudoUid= prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\")\r\n        console.log('prompt======'+pseudoUid)\r\n    }\r\n\r\n    const newUser={\r\n      uid:uid,\r\n      pseudo:pseudoUid\r\n    }\r\n    mytube.user[`user-${Date.now()}`]=newUser\r\n    this.setState({mytube})\r\n    console.log(newUser)\r\n    return newUser;\r\n  }\r\n\r\n  getUser=(uid)=>{\r\n    console.log('in get user '+uid)\r\n    const Testuser={...this.state.mytube.user}\r\n    console.log('test  ')\r\n    console.log(Testuser)\r\n    let newUser={}\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                  if((Testuser[key].uid===uid)){\r\n                    newUser=Testuser[key];\r\n                  }\r\n             }\r\n        );\r\n    if(newUser.uid===undefined){    //si aucun compte n'a été ctrouver on en créer un\r\n     console.log('new new new new')\r\n      newUser=this.addNewUser(uid)\r\n    }\r\n    console.log(newUser)\r\n    const user={...this.state.user}   //mise à jour du sate user local \r\n    this.setState({user:newUser})\r\n  }\r\n\r\n\r\n  addVideo=(nom,tags,url)=>{\r\n    const video={...this.state.mytube.video}\r\n    const NewVideo={\r\n      auteur:this.state.user,\r\n      comment:'',\r\n      like:0,\r\n      likeBy:\"\",\r\n      nom:nom,\r\n      tag:tags,\r\n      url:url,\r\n      vue:0\r\n    }\r\n\r\n    video[`video${Date.now()}`]=NewVideo\r\n    console.log(video)\r\n  }\r\n\r\n  render(){\r\n    this.addVideo('a','b','c')\r\n    return (\r\n      <>\r\n       <Router>\r\n         \r\n          <Nav state={this.state}  getPseudo={this.getPseudo} stateMytube={this.state.mytube.video} handleSearch={this.handleSearch} handleUser={this.handleUser} getUser={this.getUser} disconnecte={this.disconnecte}>\r\n          </Nav>\r\n        \r\n         <Route path='/' exact \r\n                render={()=><AdminVideo state={this.state} \r\n                            stateMytube={this.state.mytube.video} handleVue={this.handleVue}/>}/>\r\n        \r\n         <Route path='/guess/:slug' exact \r\n                render={()=><AdminVideoSelected \r\n                        stateMytube={this.state.mytube.video} />}/> \r\n\r\n          <Route path='/upload' exact \r\n                render={()=><AdminUpload state={this.state} stateMytube={this.state.mytube.video} addVideo={this.addVideo}/> }/>\r\n\r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}