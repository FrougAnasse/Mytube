{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\mes formation\\\\Mytube\\\\mytube\\\\Mytube\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport stateVideo from './stateVideo';\nimport Nav from './component/Nav';\nimport AdminVideo from './component/AdminVideo';\nimport AdminVideoSelected from './component/AdminVideoSelected'; //firebase\n\nimport base from './base'; //react router\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = value => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleUser = value => {\n      const id = this.state.user.uid;\n      this.setState({\n        user: value\n      });\n    };\n\n    this.handleVue = key => {\n      const mytube = { ...this.state.mytube\n      };\n      mytube.video[key].vue++;\n      this.setState({\n        mytube\n      });\n      const videoSelected = key;\n      this.setState({\n        videoSelected\n      });\n    };\n\n    this.handleLike = key => {\n      const mytube = { ...this.state.mytube\n      };\n      mytube.video[key].like++;\n      this.setState({\n        mytube\n      });\n    };\n\n    this.getPseudo = uid => {\n      const Testuser = { ...this.state.mytube.user\n      };\n      let pseudo = '';\n      Object.keys(Testuser) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          pseudo = Testuser[key].pseudo;\n        }\n      });\n      return pseudo;\n    };\n\n    this.addNewUser = (pseudo, uid) => {\n      const mytube = { ...this.state.mytube\n      };\n      const newUser = {\n        uid: uid,\n        pseudo: pseudo\n      };\n      mytube.user[`user-${Date.now()}`] = newUser;\n      this.setState({\n        mytube\n      });\n      return newUser;\n    };\n\n    this.getUser = (pseudo, uid) => {\n      const Testuser = { ...this.state.mytube.user\n      };\n      let newUser = {};\n      Object.keys(Testuser) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          newUser = Testuser[key];\n        }\n      });\n\n      if (newUser.uid == null) {\n        //si aucun compte n'a été ctrouver on en créer un\n        newUser = this.addNewUser(pseudo, uid);\n      }\n\n      const user = { ...this.state.user\n      }; //mise à jour du sate user local \n\n      this.setState({\n        user: newUser\n      });\n    };\n\n    this.state = {\n      mytube: {},\n      search: '',\n      videoSelected: '',\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(`/`, {\n      context: this,\n      state: 'mytube'\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          getPseudo: this.getPseudo,\n          stateMytube: this.state.mytube.video,\n          handleSearch: this.handleSearch,\n          handleUser: this.handleUser,\n          getUser: this.getUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideo, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            handleVue: this.handleVue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/guess/:slug\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoSelected, {\n            state: this.state.mytube.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/mes formation/Mytube/mytube/Mytube/src/App.js"],"names":["React","Component","stateVideo","Nav","AdminVideo","AdminVideoSelected","base","BrowserRouter","Router","Route","App","constructor","props","handleSearch","value","setState","search","handleUser","id","state","user","uid","handleVue","key","mytube","video","vue","videoSelected","handleLike","like","getPseudo","Testuser","pseudo","Object","keys","map","addNewUser","newUser","Date","now","getUser","componentDidMount","ref","syncState","context","componentWillUnmount","removeBinding","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport './App.css';\r\nimport stateVideo from './stateVideo'\r\nimport Nav from './component/Nav'\r\nimport AdminVideo from './component/AdminVideo'\r\nimport AdminVideoSelected from './component/AdminVideoSelected'\r\n\r\n//firebase\r\nimport base from './base'\r\n\r\n//react router\r\nimport{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state ={\r\n      mytube:{},\r\n      search:'',\r\n      videoSelected:'',\r\n      user:{}\r\n    }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n    this.ref=base.syncState(`/`,{\r\n      context:this,\r\n      state: 'mytube'\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  handleSearch=(value)=>{\r\n    this.setState({search:value})\r\n  }\r\n\r\n  handleUser=(value)=>{\r\n    const id=this.state.user.uid\r\n    this.setState({user:value})\r\n  }\r\n  \r\n  handleVue=(key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].vue++;\r\n    this.setState({mytube})\r\n  \r\n    const videoSelected=key\r\n    this.setState({videoSelected})\r\n  }\r\n\r\n  handleLike = (key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].like++;\r\n    this.setState({mytube})\r\n  }\r\n\r\n\r\n  getPseudo=(uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    let pseudo=''\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                      if((Testuser[key].uid===uid)){\r\n                        pseudo=Testuser[key].pseudo\r\n                      }\r\n                   }\r\n            )\r\n    ;\r\n    return pseudo\r\n  }\r\n\r\n  addNewUser=(pseudo,uid)=>{\r\n    const mytube={...this.state.mytube}\r\n    const newUser={\r\n      uid:uid,\r\n      pseudo:pseudo\r\n    }\r\n    mytube.user[`user-${Date.now()}`]=newUser\r\n    this.setState({mytube})\r\n\r\n    return newUser;\r\n  }\r\n\r\n  getUser=(pseudo,uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    let newUser={}\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                  if((Testuser[key].uid===uid)){\r\n                    newUser=Testuser[key];\r\n                  }\r\n             }\r\n        );\r\n    \r\n    if(newUser.uid==null){    //si aucun compte n'a été ctrouver on en créer un\r\n      newUser=this.addNewUser(pseudo,uid)\r\n    }\r\n\r\n    const user={...this.state.user}   //mise à jour du sate user local \r\n    this.setState({user:newUser})\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n       <Router>\r\n         \r\n          <Nav getPseudo={this.getPseudo} stateMytube={this.state.mytube.video} handleSearch={this.handleSearch} handleUser={this.handleUser} getUser={this.getUser}>\r\n          </Nav>\r\n        \r\n         <Route path='/' exact render={()=><AdminVideo state={this.state} stateMytube={this.state.mytube.video} handleVue={this.handleVue}/>}/>\r\n        \r\n         <Route path='/guess/:slug' exact render={()=><AdminVideoSelected state={this.state.mytube.video}/>}/> \r\n     \r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}