{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\VolgoBox\\\\Desktop\\\\Mytube\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Nav from './component/Nav';\nimport AdminVideo from './component/AdminVideo';\nimport AdminVideoSelected from './component/AdminVideoSelected';\nimport AdminUpload from './component/AdminUpload';\nimport AdminVideoJaime from './component/AdminVideoJaime'; //firebase\n\nimport base from './base'; //react router\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = value => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.disconnecte = () => {\n      this.setState({\n        user: ''\n      });\n    };\n\n    this.handleUser = value => {\n      const id = this.state.user.uid;\n      this.setState({\n        user: value\n      });\n    };\n\n    this.handleVue = key => {\n      const mytube = { ...this.state.mytube\n      };\n      mytube.video[key].vue++;\n      this.setState({\n        mytube\n      });\n      const videoSelected = key;\n      this.setState({\n        videoSelected\n      });\n    };\n\n    this.isAlreadyLike = keyVideo => {\n      const mytube = { ...this.state.mytube\n      };\n      let Already = false;\n\n      if (mytube !== undefined) {\n        Object.keys(mytube.video[keyVideo].likeBy || {}).map(key => {\n          if (key === this.state.user.uid) {\n            if (mytube.video[keyVideo].likeBy[this.state.user.uid] === 1) Already = true;\n          }\n        });\n        return Already;\n      }\n    };\n\n    this.handleLike = key => {\n      console.log(this.state.user.uid !== undefined);\n\n      if (this.state.user.uid !== undefined) {\n        const mytube = { ...this.state.mytube\n        };\n        console.log(key);\n        console.log(this.isAlreadyLike(key));\n\n        if (mytube.video[key].likeBy === undefined) {\n          mytube.video[key].likeBy = {};\n        }\n\n        if (mytube.video[key].likeBy[this.state.user.uid] === undefined || mytube.video[key].likeBy[this.state.user.uid] === 0) {\n          mytube.video[key].like++;\n          mytube.video[key].likeBy[this.state.user.uid] = 1;\n        } else {\n          mytube.video[key].like--;\n          mytube.video[key].likeBy[this.state.user.uid] = 0;\n        }\n\n        this.setState({\n          mytube\n        });\n      }\n    };\n\n    this.getPseudo = uid => {\n      console.log('in pseudo ' + uid);\n      const Testuser = { ...this.state.mytube.user\n      };\n      let pseudo = '';\n      Object.keys(Testuser || {}) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          pseudo = Testuser[key].pseudo;\n        }\n      });\n      return pseudo;\n    };\n\n    this.addNewUser = async uid => {\n      const Testuser = { ...this.state.mytube.user\n      };\n      console.log('in add new user ' + uid);\n      const mytube = { ...this.state.mytube\n      };\n      let pseudoUid = this.getPseudo(uid);\n      console.log('new user pseudo trouver' + pseudoUid);\n\n      if (pseudoUid === '') {\n        pseudoUid = prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\");\n        console.log('prompt======' + pseudoUid);\n      }\n\n      const newUser = {\n        uid: uid,\n        pseudo: pseudoUid\n      };\n      mytube.user[`user-${Date.now()}`] = newUser;\n      this.setState({\n        mytube\n      });\n      console.log(newUser);\n      return newUser;\n    };\n\n    this.getUser = uid => {\n      console.log('in get user ' + uid);\n      const Testuser = { ...this.state.mytube.user\n      };\n      console.log('test  ');\n      console.log(Testuser);\n      let newUser = {};\n      Object.keys(Testuser) //on vérifie que le compte n'a pas déja été créer\n      .map(key => {\n        if (Testuser[key].uid === uid) {\n          newUser = Testuser[key];\n        }\n      });\n\n      if (newUser.uid === undefined) {\n        //si aucun compte n'a été ctrouver on en créer un\n        console.log('new new new new');\n        newUser = this.addNewUser(uid);\n      }\n\n      console.log(newUser);\n      const user = { ...this.state.user\n      }; //mise à jour du sate user local \n\n      this.setState({\n        user: newUser\n      });\n    };\n\n    this.addVideo = (nom, tags, url) => {\n      const mytube = { ...this.state.mytube\n      };\n      const NewVideo = {\n        auteur: this.state.user.pseudo,\n        comment: {},\n        like: 0,\n        likeBy: {},\n        nom: nom,\n        tag: tags,\n        url: url,\n        vue: 0\n      };\n      mytube.video[`video${Date.now()}`] = NewVideo;\n      this.setState({\n        mytube\n      });\n      console.log(mytube);\n    };\n\n    this.addComment = (key, comment) => {\n      console.log('in comment');\n\n      if (this.state.user.uid !== undefined) {\n        const mytube = { ...this.state.mytube\n        };\n        console.log(key);\n\n        if (mytube.video[key].comment === undefined || mytube.video[key].comment === '') {\n          mytube.video[key].comment = {};\n        }\n\n        const NewComment = {\n          auteur: this.state.user.pseudo,\n          comment: comment\n        };\n        mytube.video[key].comment[Date.now()] = NewComment;\n        this.setState({\n          mytube\n        });\n      }\n    };\n\n    this.refCard = /*#__PURE__*/React.createRef();\n    this.refCardVideo = /*#__PURE__*/React.createRef();\n    this.state = {\n      mytube: {},\n      search: '',\n      videoSelected: '',\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(`/`, {\n      context: this,\n      state: 'mytube'\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    //variable permettant la manipulation de la marge lors de l'activation du menu\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          state: this.state,\n          getPseudo: this.getPseudo,\n          stateMytube: this.state.mytube.video,\n          handleSearch: this.handleSearch,\n          handleUser: this.handleUser,\n          getUser: this.getUser,\n          disconnecte: this.disconnecte,\n          refCardVideo: this.refCardVideo,\n          refCard: this.refCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideo, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            handleVue: this.handleVue,\n            isAlreadyLike: this.isAlreadyLike,\n            stateMytube: this.state.mytube.video,\n            refCard: this.refCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/video/:slug\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoSelected, {\n            state: this.state,\n            isAlreadyLike: this.isAlreadyLike,\n            stateMytube: this.state.mytube.video,\n            handleLike: this.handleLike,\n            refCardVideo: this.refCardVideo,\n            refCard: this.refCard,\n            addComment: this.addComment,\n            handleVue: this.handleVue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/upload\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminUpload, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            addVideo: this.addVideo,\n            refCard: this.refCard,\n            isAlreadyLike: this.isAlreadyLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/video/likes\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(AdminVideoJaime, {\n            state: this.state,\n            stateMytube: this.state.mytube.video,\n            refCard: this.refCard,\n            isAlreadyLike: this.isAlreadyLike,\n            typeJaime: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VolgoBox/Desktop/Mytube/src/App.js"],"names":["React","Nav","AdminVideo","AdminVideoSelected","AdminUpload","AdminVideoJaime","base","BrowserRouter","Router","Route","App","Component","constructor","props","handleSearch","value","setState","search","disconnecte","user","handleUser","id","state","uid","handleVue","key","mytube","video","vue","videoSelected","isAlreadyLike","keyVideo","Already","undefined","Object","keys","likeBy","map","handleLike","console","log","like","getPseudo","Testuser","pseudo","addNewUser","pseudoUid","prompt","newUser","Date","now","getUser","addVideo","nom","tags","url","NewVideo","auteur","comment","tag","addComment","NewComment","refCard","createRef","refCardVideo","componentDidMount","ref","syncState","context","componentWillUnmount","removeBinding","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport Nav from './component/Nav'\r\nimport AdminVideo from './component/AdminVideo'\r\nimport AdminVideoSelected from './component/AdminVideoSelected'\r\nimport AdminUpload from './component/AdminUpload'\r\nimport AdminVideoJaime from './component/AdminVideoJaime'\r\n\r\n//firebase\r\nimport base from './base'\r\n\r\n//react router\r\nimport{BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.refCard = React.createRef();\r\n    this.refCardVideo = React.createRef();\r\n    \r\n    this.state ={\r\n      mytube:{},\r\n      search:'',\r\n      videoSelected:'',\r\n      user:{}\r\n    }\r\n  }\r\n   \r\n\r\n  componentDidMount(){\r\n    this.ref=base.syncState(`/`,{\r\n      context:this,\r\n      state: 'mytube'\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  handleSearch=(value)=>{\r\n    this.setState({search:value})\r\n    \r\n  }\r\n\r\n  disconnecte=()=>{\r\n    this.setState({user:''})\r\n  }\r\n\r\n  handleUser=(value)=>{\r\n    const id=this.state.user.uid\r\n    this.setState({user:value})\r\n  }\r\n  \r\n  handleVue=(key) => {\r\n    const mytube= {...this.state.mytube}\r\n    mytube.video[key].vue++;\r\n    this.setState({mytube})\r\n  \r\n    const videoSelected=key\r\n    this.setState({videoSelected})\r\n  }\r\n\r\n\r\n  isAlreadyLike=(keyVideo)=>{\r\n    const mytube= {...this.state.mytube}\r\n    let Already=false;\r\n    if(mytube!==undefined){\r\n      Object.keys(mytube.video[keyVideo].likeBy || {})\r\n            .map(key =>{\r\n                if(key===this.state.user.uid){\r\n                  if(mytube.video[keyVideo].likeBy[this.state.user.uid]===1)\r\n                  Already=true\r\n                }\r\n            })\r\n\r\n      return  Already\r\n    }\r\n  }\r\n\r\n  handleLike = (key) => {\r\n    console.log(this.state.user.uid!==undefined)\r\n    if(this.state.user.uid!==undefined ){\r\n      const mytube= {...this.state.mytube}\r\n      console.log(key)\r\n      console.log(this.isAlreadyLike(key))\r\n   \r\n    if( mytube.video[key].likeBy===undefined){\r\n          mytube.video[key].likeBy={};\r\n    }\r\n     if(mytube.video[key].likeBy[this.state.user.uid]===undefined || mytube.video[key].likeBy[this.state.user.uid]===0){\r\n        mytube.video[key].like++\r\n        mytube.video[key].likeBy[this.state.user.uid]=1\r\n      }\r\n      else\r\n      {\r\n        mytube.video[key].like--\r\n        mytube.video[key].likeBy[this.state.user.uid]=0\r\n      }\r\n      this.setState({mytube})\r\n    }\r\n  }\r\n\r\n\r\n  getPseudo=(uid)=>{\r\n    console.log('in pseudo '+uid)\r\n    const Testuser={...this.state.mytube.user}\r\n    let pseudo=''\r\n    Object.keys(Testuser || {})   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                      if((Testuser[key].uid===uid)){\r\n                        pseudo=Testuser[key].pseudo\r\n                      }\r\n                   }\r\n            );\r\n    return pseudo\r\n  }\r\n\r\n  addNewUser= async (uid)=>{\r\n    const Testuser={...this.state.mytube.user}\r\n    console.log('in add new user '+uid)\r\n    const mytube={...this.state.mytube}\r\n    let pseudoUid=this.getPseudo(uid)\r\n    console.log('new user pseudo trouver'+pseudoUid)\r\n    \r\n    if(pseudoUid===''){\r\n        pseudoUid= prompt(\"Veuillez rentrer votre pseudo attention il est      définitive !\")\r\n        console.log('prompt======'+pseudoUid)\r\n    }\r\n\r\n    const newUser={\r\n      uid:uid,\r\n      pseudo:pseudoUid\r\n    }\r\n    mytube.user[`user-${Date.now()}`]=newUser\r\n    this.setState({mytube})\r\n    console.log(newUser)\r\n    return newUser;\r\n  }\r\n\r\n  getUser=(uid)=>{\r\n    console.log('in get user '+uid)\r\n    const Testuser={...this.state.mytube.user}\r\n    console.log('test  ')\r\n    console.log(Testuser)\r\n    let newUser={}\r\n    Object.keys(Testuser)   //on vérifie que le compte n'a pas déja été créer\r\n        .map(key => {\r\n                  if((Testuser[key].uid===uid)){\r\n                    newUser=Testuser[key];\r\n                  }\r\n             }\r\n        );\r\n    if(newUser.uid===undefined){    //si aucun compte n'a été ctrouver on en créer un\r\n     console.log('new new new new')\r\n      newUser=this.addNewUser(uid)\r\n    }\r\n    console.log(newUser)\r\n    const user={...this.state.user}   //mise à jour du sate user local \r\n    this.setState({user:newUser})\r\n  }\r\n\r\n\r\n  addVideo=(nom,tags,url)=>{\r\n    const mytube={...this.state.mytube}\r\n    const NewVideo={\r\n      auteur:this.state.user.pseudo,\r\n      comment:{},\r\n      like:0,\r\n      likeBy:{},\r\n      nom:nom,\r\n      tag:tags,\r\n      url:url,\r\n      vue:0\r\n    }\r\n    mytube.video[`video${Date.now()}`]=NewVideo\r\n    this.setState({mytube})\r\n    console.log(mytube)\r\n  }\r\n\r\n  addComment=(key,comment)=>{\r\n    console.log('in comment')\r\n    if(this.state.user.uid!==undefined ){\r\n      const mytube= {...this.state.mytube}\r\n      console.log(key)\r\n\r\n      if( mytube.video[key].comment===undefined ||mytube.video[key].comment===''){\r\n          mytube.video[key].comment={};\r\n      }\r\n\r\n      const NewComment={\r\n       auteur:this.state.user.pseudo,\r\n       comment:comment\r\n     }\r\n      mytube.video[key].comment[Date.now()]=NewComment\r\n      this.setState({mytube})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    \r\n  //variable permettant la manipulation de la marge lors de l'activation du menu\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n       <Router>\r\n         \r\n          <Nav state={this.state}  getPseudo={this.getPseudo} \r\n                  stateMytube={this.state.mytube.video} \r\n                  handleSearch={this.handleSearch} \r\n                  handleUser={this.handleUser} \r\n                  getUser={this.getUser} \r\n                  disconnecte={this.disconnecte}\r\n                  refCardVideo={this.refCardVideo}\r\n                  refCard={this.refCard}\r\n                  >\r\n          </Nav>\r\n        \r\n         <Route path='/' exact \r\n                render={()=><AdminVideo\r\n                            state={this.state} \r\n                            stateMytube={this.state.mytube.video} \r\n                            handleVue={this.handleVue}\r\n                            isAlreadyLike={this.isAlreadyLike}\r\n                            stateMytube={this.state.mytube.video} \r\n                            refCard={this.refCard}\r\n                          />\r\n                        }/>\r\n        \r\n         <Route path='/video/:slug' exact \r\n                render={()=><AdminVideoSelected \r\n                        state={this.state}\r\n                        isAlreadyLike={this.isAlreadyLike}\r\n                        stateMytube={this.state.mytube.video} \r\n                        handleLike={this.handleLike}\r\n                        refCardVideo={this.refCardVideo}\r\n                        refCard={this.refCard}\r\n                        addComment={this.addComment}\r\n                        handleVue={this.handleVue}\r\n                        />\r\n                        }/> \r\n\r\n          <Route path='/upload' exact \r\n                render={()=><AdminUpload state={this.state} \r\n                              stateMytube={this.state.mytube.video} \r\n                              addVideo={this.addVideo}\r\n                              refCard={this.refCard}\r\n                              isAlreadyLike={this.isAlreadyLike}/> \r\n                        }/>\r\n          \r\n          <Route path='/video/likes' exact \r\n                render={()=><AdminVideoJaime state={this.state} \r\n                              stateMytube={this.state.mytube.video} \r\n                              refCard={this.refCard}\r\n                              isAlreadyLike={this.isAlreadyLike}\r\n                              typeJaime={true}/> \r\n                        }/>\r\n          \r\n          \r\n\r\n      </Router> \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}